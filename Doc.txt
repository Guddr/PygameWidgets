Документация к WPygame

Меню
-Menu

Объекты
-ObjsMenu
-ObjsText
-ObjsPanel

Виджеты
-Progressbar
-Entry
-Button
-Label
-Text
-Font

Виджеты
__PROGRESSBAR__
ОПИСАНИЕ
Прогресс бар, который показывает прогресс за определенное время. Выполнен в виде заполняющейся шкалы
с индикатором значения и текстом, отображающий прогресс. Имеет множество способов приминения.

!!!Внимание, возможна не стабильная работа данного виджета. Данный виджет пока ещё находиться в
процессе тестирования. Если будут вопросы или ошибки, пишите.

-Progressbar(self, screen, x, y, text, color, dots, steps, time, rColor, width, height, img_active, img_disactive, music, function)
Основные параметры (screen, x, y, text)
Параметры индикатора (dots, steps, time, rColor)
Параметры виджета (color, width, height, img_active, img_disactive, music)
Функция виджета (function)

Основные параметры
screen - иницилизованный экран, на котором должен выводиться виджет
x      - позиция виджета по оси Ох на экране
y      - позиция виджета по оси Oy на экране
text   - class Text(виджет Text этой библиотеки). Необходим для вывода текста виджета.

Параметры индикатора
dots   - Начальная и конечная позиция индикатора     По умолчанию = [0, 10]
steps  - Количество шагов индикатора до заполнения   По умолчанию = 10
time   - Количество времени до следующего шага       По умолчанию = 60
rColor - Цвет индикатора                             По умолчанию = GRAY(128, 128, 128)

Форма виджета
color         - Цвет прямоугольника, который будет выводиться, если нет изображения             По умолчанию = WHITE(255, 255, 255)
width         - Ширина прямоугольника(Используется если img_disactive=None)                     По умолчанию = 500
height        - Высота прямоугольника(Используется если img_disactive=None)                     По умолчанию = 70
img_active    - Активное изображение виджета. Рисуется когда, на виджет наводиться мышка        По умолчанию = None
img_disactive - Неактивное изображение виджета. Рисуется когда на виджет не наводиться мышка.   По умолчанию = None
music         - Музыка используемая при наведении на виджет                                     По умолчанию = None

Функция виджета
function      - Выполняет команду после заполнения индикатора                                   По умолчанию = None

API
Progressbar.key                             - Переменная отвечающая, за автоматическое заполнение индикатора   По умолчанию = True
Progressbar.update()     -> return None     - Рисует прогресс бар на экране. Если Progressbar.key = True, то происходит автоматическое заполнение индикатора,
                                              Которое можно наблюдать спустя время = (time / FPS)
Progressbar.set_res(res) -> return None     - Если Progressbar.key = False, то лучше использовать этот метод, чтобы вручную управлять индикацией
Progressbar.get_res(res) -> return self.res - Получение шага индикации
Progressbar.func()       -> return None     - Выполнение функции Progressbar
Progressbar.activate()   -> return None     - Делает виджет активным(он отображается на экране)
Progressbar.disactivate()-> return None     - Делает виджет неактивным(он не отображается на экране)




__ENTRY__
ОПИСАНИЕ
Поле ввода, используется для того, чтобы пользователь имел возможность вводить какие-либо данные.
Например можно вводить имя персонажа, указывать количество денег, которые нужно ввывести с игрового счёта
и т.д
Пока имеется базовая возможность вводить символы нижнего регистра и цифры. Дополнительные клавиши такие как
SHIFT, CAPSLOCK, CRTL, ALT для использования в данные момент не доступны. Но если будет потребность буду
работать над их добавлением.
Для создания поля ввода нужно передать экран на котором будет выводиться поле, её координаты в осях Ох и Oy,
текст( см виджет текст ниже ).
Каждое поле ввода имеет свой фокус, поэтому мы можете печатать даже если мышка не наведена на экран. Если
у вас будут какие-то проблемы с этим, пишите.

-Entry(self, screen, x, y, text, color, width, height, img_active, img_disactive, music=None)
Основные параметры (screen, x, y, text)
Форма поля (color, width, height, img_active, img_disactive, music)

Основные параметры
screen - иницилизованный экран, на котором должен выводиться виджет
x      - позиция виджета по оси Ох на экране
y      - позиция виджета по оси Oy на экране
text   - class Text(виджет Text этой библиотеки). Необходим для вывода текста виджета.

Форма виджета
color         - Цвет прямоугольника, который будет выводиться, если нет изображения             По умолчанию = WHITE(255, 255, 255)
width         - Ширина прямоугольника(Используется если img_disactive=None)                     По умолчанию = 300
height        - Высота прямоугольника(Используется если img_disactive=None)                     По умолчанию = 110
img_active    - Активное изображение поле ввода. Рисуется когда, на поле наводиться мышка       По умолчанию = None
img_disactive - Неактивное изображение поле ввода. Рисуется когда на поле не наводиться мышка.  По умолчанию = None
music         - Музыка используемая при наведении на поле ввода                                 По умолчанию = None

API

Entry.update() -> return None  - Рисует кнопку на экране + проверяет фокусировку.
                  Если поле ввода находиться в фокусе, то поле ввода
                  Становиться активным в него можно вводать текст


Entry.click(mouse) -> return bool - Проверяет нажатие кнопки. Если пользователь нажимал на поле ввода, то
                 Поле ввода находиться в фокусе. Если пользователь нажал вне поля ввода,
                 То поле не находиться в фокусе.
#mouse = pygame.mouse.get_pos()

Entry.add_key(key) -> return None - Добавляет ввёденный символ в поле ввода
Entry.delete_key() -> return None - Удаляет последний символ из поля ввода
Entry.end_key()    -> return None - Окончание процесса записи текста. Снимает фокусировку с поля ввода
Entry.get()        -> return str  - Получение текущего текста из поля ввода.
Entry.activate()   -> return None - Делает виджет активным   (он отображается на экране)
Entry.disactivate()-> return None - Делает виджет неактивным (он не отображается на экране)


__BUTTON__
ОПИСАНИЕ
Кнопка, используется для того, чтобы пользователь имел возможность создавать базовый функционал
Можно передавать изображение, как активное(будет выводиться при наведении), так и неактивное,
которое будет выводиться во всех остальных случаях.
Если изображение не передаётся, то будет использовать стандартный прямоугольник,
с заданой шириной, высотой и цветом.
Для создания кнопки нужно передать экран на котором будет выводиться кнопка, её координаты
в осях Ох и Оу и передать текст. Текст - это класс Text описанный в этой документации ниже.
Прошу ознакомиться с ним прежде чем, создавать кнопку.( см виджет текст ниже )

-Button(screen, x, y, text, color, width, height, img_active, img_disactive, music, function)\
Основные параметры (screen, x, y, text)
Форма кнопки       (color, width, height, img_active, img_disactive, music)
Функция кнопки     (function)

Основные параметры
screen - иницилизованный экран, на котором должна выводиться кнопка
x      - позиция кнопки по оси Ох на экране
y      - позиция кнопки по оси Oy на экране
text   - class Text(виджет Text этой библиотеки). Будет выводиться на кнопке.

Форма кнопки
color         - Цвет прямоугольника, который будет выводиться, если нет изображения           По умолчанию = WHITE(255, 255, 255)
width         - Ширина кнопки(Используется если не используются картинки)                     По умолчанию = 300
height        - Высота кнопки(Используется если не используется картинки)                     По умолчанию = 110
img_active    - Активное изображение кнопки. Рисуется когда, на кнопку наводиться мышка       По умолчанию = None
img_disactive - Неактивное изображение кнопки. Рисуется когда на кнопку не наводиться мышка.  По умолчанию = None
music         - Музыка используемая при нажатии наведении на кнопку                           По умолчанию = None

Можно передавать только одну картинку в параметр img_disactive.
Если изображение не будет передваться, то будет рисоваться стандарный прямоугольник
Ширину и длину которого можно указать.(По умолчанию width=300, height=110)

Функция кнопки
function      - Действие которое должна сделать кнопка при нажатии                            По умолчанию = None

API
Button.update(mouse) -> return None - Рисует каждый кадр кнопку + проверяет положение мыши.
                        Наведена на кнопку, или убрана с неё.

Button.click(mouse) -> return False or func  - Проверяет нажата ли кнопка, если да, то вызвращает функцию,
                       которая должна выполнить кнопка, иначе возвращает False
#mouse = pygame.mouse.get_pos()

Button.activate()   -> return None - Делает виджет активным   (он отображается на экране)
Button.disactivate()-> return None - Делает виджет неактивным (он не отображается на экране)

__LABEL__
ОПИСАНИЕ
Подпись, используется для каких-то текстовых обозначений. Можно сделать надпись,
помещенную в картинке или стандартном прямоугольнике pygame.
Часть текста можно обновлять.
-Label(screen, x, y, text, color, width, height, img_disactive)
Основыне параметры (screen, x, y, text)
Форма подписи      (color, width, height, img_disactive)

Основные параметры
screen - иницилизованный экран, на котором должна выводиться кнопка
x      - позиция кнопки по оси Ох на экране
y      - позиция кнопки по оси Oy на экране
text   - class Text(виджет Text этой библиотеки). Будет выводиться на подписе.

Форма подписи
color         - Цвет прямоугольника, который будет выводиться, если нет изображения           По умолчанию = WHITE(255, 255, 255)
width         - Ширина кнопки(Используется если не используются картинки)                     По умолчанию = 300
height        - Высота кнопки(Используется если не используется картинки)                     По умолчанию = 110
img_disactive - Неактивное изображение кнопки. Рисуется когда на кнопку не наводиться мышка.  По умолчанию = None

API
Label.update()      -> return None - Рисует каждый кадр подпись
Label.change_text() -> return None -  Меняет текст на подписе
Label.activate()    -> return None - Делает виджет активным   (он отображается на экране)
Label.disactivate() -> return None - Делает виджет неактивным (он не отображается на экране)


__TEXT__
ОПИСАНИЕ
Класс текста, который используется в моей библиотеки. Данный текст можно выводить на любую поверхность,
использовать любой шрифт, цвет, тип, размер. Применять отступы, менять текст и шрифт.
Используется во всех виджетах, где небходимо выводить текст. А так же можно использовать
самостоятельно для вывода текста на экран. См в коде objText

-Text(screen, text, font, font_color, font_type, font_size, font_location, indents)
Основные параметры  (screen, text, font)
Параметры шрифта    (font_color, font_type, font_size)
Расположение текста (text_location, indents)

Основные параметры
screen - иницилизированный экран,на котором будет выводиться текст
text   - текст, который должен выводиться на экране
font   - шрифт, который будет использоваться для рисования текста на экране

Параметры шрифты
font_color     - цвет шрифта                            По умолчанию = GRAY(122,122,122)
font_type      - тип шрифта                             По умолчанию = None
font_size      - размер шрифта                          По умолчанию = 50

Расположение текста
text_location  - разположение внутри объекта           По умолчанию = "C"
indents        - отступы ддля текста внутри объекта    По умолчанию = None

API
Text.change_font(pygame.font.Font) -> return None - Меняет шрифт текста
Text.change_text(str)              -> return None - Меняет текст
Text.activate_indent([int])        -> return None - Активирует отступы (Используйте, если хотите чтобы текст имел какие-то особенные параметры отступа)*См.раздел примеров TEXT
Text.location(*[int])              -> return None - Выравнивание текста.(Право, Центр, Лево). Так же используется в виджетах.
Text.draw(x:int, y:int)            -> return None - Отображения текст на экране в позиции (x,y)
Text.draw_in_obj(x:int, y:int)     -> return None - Отображение текст поверх виджета

__FONT__
ОПИСАНИЕ
Класс шрифта, который используется для отображения текста. Шрифт можно настроить для каждого виджета отдельно.
Используется стандартный набор шрифтов и цветом из pygame. Если есть желание расширить типы шрифтов, цвета
то смотрите официальную документацию.

-Font(type, color, size)
Основные параметры (type, color, size)

Основные параметры
type    - тип шрифта
color   - цвета шрифта
size    - размер шрифта

API
Font.render(text:str)   -> return pygame.font.render    - Создаёт текст, который можно выводить на экран, используя настройки шрифта
Font.get_color()        -> return (R, G, B)             - Возвращает цвет шрифта в формате RGB
Font.get_size(text:str) -> return pygame.font.Font.size - Возвращает размер переданного текста в пискелях по координатам (x, y)
Font.set_color(color)   -> return None                  - Устанавливает переданный цвет шрифта. Будьте внимательны, вы должны передавать (R, G, B)
